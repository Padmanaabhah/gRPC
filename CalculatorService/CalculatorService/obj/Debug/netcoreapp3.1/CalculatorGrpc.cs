// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/calculator.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CalculatorService {
  public static partial class Calculator
  {
    static readonly string __ServiceName = "Calculate.Calculator";

    static readonly grpc::Marshaller<global::CalculatorService.InputData> __Marshaller_Calculate_InputData = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CalculatorService.InputData.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::CalculatorService.Result> __Marshaller_Calculate_Result = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::CalculatorService.Result.Parser.ParseFrom);

    static readonly grpc::Method<global::CalculatorService.InputData, global::CalculatorService.Result> __Method_Add = new grpc::Method<global::CalculatorService.InputData, global::CalculatorService.Result>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Add",
        __Marshaller_Calculate_InputData,
        __Marshaller_Calculate_Result);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CalculatorService.CalculatorReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Calculator</summary>
    [grpc::BindServiceMethod(typeof(Calculator), "BindService")]
    public abstract partial class CalculatorBase
    {
      public virtual global::System.Threading.Tasks.Task<global::CalculatorService.Result> Add(global::CalculatorService.InputData request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(CalculatorBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Add, serviceImpl.Add).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CalculatorBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Add, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CalculatorService.InputData, global::CalculatorService.Result>(serviceImpl.Add));
    }

  }
}
#endregion
